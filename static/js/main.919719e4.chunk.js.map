{"version":3,"sources":["components/ImageGallery/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGallery/ImageGalleryItem.js","API.js","components/Modal/Modal.js","components/Loader/Loader.js","components/Button/Button.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","value","setValue","className","s","SearchForm","e","preventDefault","trim","toast","type","Button","Label","SearchForm__input","autoComplete","autoFocus","placeholder","onChange","target","ImageGallery","children","ImageGalleryItem","imagesArr","onClickImg","map","imgObj","onClick","largeImageURL","src","webformatURL","alt","tags","Image","id","KEY","fetchImg","name","page","axios","get","Modal","largeImage","toggleModall","useEffect","window","addEventListener","handleEscape","removeEventListener","code","createPortal","Overlay","currentTarget","document","querySelector","Loader","color","height","width","timeout","handleCick","App","images","setImages","showModal","setShowModal","setLargeImage","isLoading","setIsLoading","setPage","showMessage","setShowMessage","then","data","hits","length","setState","prevImg","catch","err","finally","toggleModal","prevShowModal","scrollOnLoadButton","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","showButton","valueInput","fullImageUrl","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.919719e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__205TZ\",\"Image\":\"ImageGalleryItem_Image__3TrFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__Itdsu\",\"Modal\":\"Modal_Modal__1by2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__KsSdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1lK1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__336S-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__s_3lJ\",\"SearchForm\":\"Searchbar_SearchForm__37JeF\",\"SearchForm__input\":\"Searchbar_SearchForm__input__xy4Ee\",\"Button\":\"Searchbar_Button__3Gar5\",\"Label\":\"Searchbar_Label__2ea1Z\"};","import { useState } from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (value.trim() === '') {\r\n      toast('Enter a query');\r\n      return;\r\n    }\r\n    onSubmit(value);\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.Button}>\r\n          <span className={s.Label}>Search</span>\r\n        </button>\r\n        <input\r\n          className={s.SearchForm__input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleChange}\r\n          value={value}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     value: '',\r\n//   };\r\n\r\n//   handleChange = e => {\r\n//     this.setState({ value: e.target.value });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     const { value } = this.state;\r\n//     e.preventDefault();\r\n//     if (value.trim() === '') {\r\n//       toast('Enter a query');\r\n//       return;\r\n//     }\r\n//     this.props.onSubmit(value);\r\n//     // this.resetForm();\r\n//   };\r\n\r\n//   // resetForm = () => {\r\n//   //   this.setState({ value: '' });\r\n//   // };\r\n\r\n//   render() {\r\n//     const { handleChange, handleSubmit } = this;\r\n//     const { value } = this.state;\r\n//     return (\r\n//       <header className={s.Searchbar}>\r\n//         <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n//           <button type=\"submit\" className={s.Button}>\r\n//             <span className={s.Label}>Search</span>\r\n//           </button>\r\n//           <input\r\n//             className={s.SearchForm__input}\r\n//             type=\"text\"\r\n//             autoComplete=\"off\"\r\n//             autoFocus\r\n//             placeholder=\"Search images and photos\"\r\n//             onChange={handleChange}\r\n//             value={value}\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Searchbar;\r\n","import s from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return <ul className={s.ImageGallery}>{children}</ul>;\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ imagesArr, onClickImg }) => {\r\n  return imagesArr.map(imgObj => {\r\n    const fullImage = () => onClickImg(imgObj.largeImageURL);\r\n    return (\r\n      <li className={s.ImageGalleryItem} key={imgObj.id} onClick={fullImage}>\r\n        <img src={imgObj.webformatURL} alt={imgObj.tags} className={s.Image} />\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  imagesArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n  onClickImg: PropTypes.func.isRequired,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst KEY = '23051678-b5ac65469c9e5d51c8f14a2a6';\r\n\r\nfunction fetchImg(name = 'cat', page = 1) {\r\n  return axios.get(\r\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n}\r\n\r\nexport default fetchImg;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nfunction Modal({ largeImage, toggleModall }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleEscape);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEscape);\r\n    };\r\n  });\r\n\r\n  const handleEscape = e => {\r\n    if (e.code === 'Escape') {\r\n      toggleModall();\r\n    }\r\n  };\r\n\r\n  const handleClose = e => {\r\n    if (e.currentTarget === e.target) {\r\n      toggleModall();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleClose}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImage} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    document.querySelector('#modalRoot'),\r\n  );\r\n}\r\n// class Modal extends Component {\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleEscape);\r\n//   }\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleEscape);\r\n//   }\r\n\r\n//   handleEscape = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.toggleModall();\r\n//     }\r\n//   };\r\n\r\n//   handleClose = e => {\r\n//     if (e.currentTarget === e.target) {\r\n//       this.props.toggleModall();\r\n//     }\r\n//   };\r\n//   render() {\r\n//     return createPortal(\r\n//       <div className={s.Overlay} onClick={this.handleClose}>\r\n//         <div className={s.Modal}>\r\n//           <img src={this.props.largeImage} alt=\"\" />\r\n//         </div>\r\n//       </div>,\r\n//       document.querySelector('#modalRoot'),\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Modal;\r\n","import Spinner from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loader = () => (\r\n  <div className={s.Loader}>\r\n    <Spinner\r\n      type=\"Audio\"\r\n      color=\"#00BFFF\"\r\n      height={180}\r\n      width={180}\r\n      timeout={3000}\r\n    />\r\n  </div>\r\n);\r\nexport default Loader;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ handleCick }) => (\r\n  <div>\r\n    <button type=\"button\" className={s.Button} onClick={handleCick}>\r\n      Load more\r\n    </button>\r\n  </div>\r\n);\r\n\r\nButton.propTypes = {\r\n  handleCick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport ImageGalleryItem from './components/ImageGallery/ImageGalleryItem';\r\nimport fetchImg from './API';\r\nimport Modal from './components/Modal/Modal';\r\nimport Loader from './components/Loader/Loader';\r\nimport Button from './components/Button/Button';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  const [images, setImages] = useState([]);\r\n  const [value, setValue] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImage, setLargeImage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setShowMessage(false);\r\n\r\n    fetchImg(value, page)\r\n      .then(data => {\r\n        if (data.data.hits.length === 0) {\r\n          this.setState({ images: [], showMessage: true });\r\n        }\r\n        setImages(prevImg => [...prevImg, ...data.data.hits]);\r\n      })\r\n      .catch(err => setShowMessage(true))\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [value, page]);\r\n\r\n  const onClickBtn = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n\r\n    scrollOnLoadButton();\r\n  };\r\n\r\n  const handleFormSubmit = valueInput => {\r\n    setImages([]);\r\n    setValue(valueInput);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleGalleryItem = fullImageUrl => {\r\n    setLargeImage(fullImageUrl);\r\n    toggleModal();\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(prevShowModal => !prevShowModal);\r\n  };\r\n\r\n  const scrollOnLoadButton = () => {\r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.clientHeight - 130,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  const showButton = images.length > 0 && images.length >= 12;\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {showMessage ? (\r\n        <h2 className=\"text\">\r\n          Nothing was found for your query. Try another query!\r\n        </h2>\r\n      ) : (\r\n        <ImageGallery>\r\n          <ImageGalleryItem imagesArr={images} onClickImg={handleGalleryItem} />\r\n        </ImageGallery>\r\n      )}\r\n      <div className=\"containerBtn\">\r\n        {showButton && <Button handleCick={onClickBtn} />}\r\n      </div>\r\n      {showModal && (\r\n        <Modal toggleModall={toggleModal} largeImage={largeImage} />\r\n      )}\r\n      {isLoading && <Loader />}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n// class App extends Component {\r\n//   state = {\r\n//     images: [],\r\n//     value: '',\r\n//     showModal: false,\r\n//     largeImage: '',\r\n//     isLoading: false,\r\n//     page: 1,\r\n//     showMessage: false,\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.state.page !== 2) {\r\n//       this.scrollOnLoadButton();\r\n//     }\r\n//     if (prevState.value !== this.state.value) {\r\n//       this.fetchData();\r\n//     }\r\n//   }\r\n\r\n//   fetchData = () => {\r\n//     this.setState({ isLoading: true, showMessage: false });\r\n\r\n//     const { value, page } = this.state;\r\n//     fetchImg(value, page)\r\n//       .then(data => {\r\n//         if (data.data.hits.length === 0) {\r\n//           this.setState({ images: [], showMessage: true });\r\n//         }\r\n//         this.setState(prevState => ({\r\n//           images: [...prevState.images, ...data.data.hits],\r\n//           page: prevState.page + 1,\r\n//         }));\r\n//       })\r\n//       .catch(err => this.setState({ showMessage: true }))\r\n//       .finally(() => {\r\n//         this.setState({ isLoading: false });\r\n//       });\r\n//   };\r\n\r\n//   handleGalleryItem = fullImageUrl => {\r\n//     this.setState({\r\n//       largeImage: fullImageUrl,\r\n//     });\r\n//     this.toggleModal();\r\n//   };\r\n\r\n//   handleFormSubmit = valueInput => {\r\n//     this.setState({ images: [], value: valueInput, page: 1 });\r\n//   };\r\n\r\n//   toggleModal = () => {\r\n//     this.setState({ showModal: !this.state.showModal });\r\n//   };\r\n\r\n//   scrollOnLoadButton = () => {\r\n//     window.scrollTo({\r\n//       top: document.documentElement.scrollHeight,\r\n//       behavior: 'smooth',\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const { handleFormSubmit, toggleModal, handleGalleryItem, fetchData } =\r\n//       this;\r\n//     const { images, showModal, largeImage, isLoading, showMessage } =\r\n//       this.state;\r\n//     const showButton = images.length > 0 && images.length >= 12;\r\n//     return (\r\n//       <>\r\n//         <Searchbar onSubmit={handleFormSubmit} />\r\n//         {showMessage ? (\r\n//           <h2 className=\"text\">\r\n//             Nothing was found for your query. Try another query!\r\n//           </h2>\r\n//         ) : (\r\n//           <ImageGallery>\r\n//             <ImageGalleryItem\r\n//               imagesArr={images}\r\n//               onClickImg={handleGalleryItem}\r\n//             />\r\n//           </ImageGallery>\r\n//         )}\r\n//         <div className=\"containerBtn\">\r\n//           {showButton && <Button handleCick={fetchData} />}\r\n//         </div>\r\n//         {showModal && (\r\n//           <Modal toggleModall={toggleModal} largeImage={largeImage} />\r\n//         )}\r\n//         {isLoading && <Loader />}\r\n//         <ToastContainer />\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}